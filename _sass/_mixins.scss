/* SCSS Mixins */

@use "sass:map";
@use "variables" as *;

// =============================================================================
// RESPONSIVE MIXINS
// =============================================================================

@mixin tablet {
  @media screen and (max-width: breakpoint(tablet)) {
    @content;
  }
}

@mixin mobile {
  @media screen and (max-width: breakpoint(mobile)) {
    @content;
  }
}

@mixin mobile-sm {
  @media screen and (max-width: breakpoint(mobile-sm)) {
    @content;
  }
}

// =============================================================================
// LAYOUT MIXINS
// =============================================================================

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

@mixin content-container($max-width: layout(max-width-content)) {
  max-width: $max-width;
  margin-left: auto;
  margin-right: auto;
}

// =============================================================================
// COMPONENT MIXINS
// =============================================================================

// Button mixin for store buttons
@mixin store-button($bg-image, $bg-hover, $width: 135px, $height: 45px) {
  background-image: url('#{$bg-image}');
  background-position: 50%;
  background-repeat: no-repeat;
  background-size: contain;
  width: $width;
  height: $height;
  display: block;
  
  &:hover {
    background-image: url('#{$bg-hover}');
  }
}

// Typography mixins
@mixin text-style($size, $weight: normal, $line-height: base, $family: primary) {
  font-family: font($family);
  font-size: font-size($size);
  font-weight: map.get($font-weights, $weight);
  line-height: map.get($line-heights, $line-height);
}
